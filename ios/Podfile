# Require the react_native_pods.rb script using Node
require File.join(
  Pod::Executable.execute_command('node', [
    '-p',
    'require.resolve("react-native/scripts/react_native_pods.rb", { paths: [process.argv[1]] })',
    __dir__
  ]).strip
)

# Define the iOS platform and minimum version
platform :ios, '13.0'
prepare_react_native_project!

# Config for Flipper (React Native debugging tool)
flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

# Optional configuration for using frameworks
linkage = ENV['USE_FRAMEWORKS']
if linkage
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'medistoris.cat' do
  config = use_native_modules!

  # Flags change depending on the environment values.
  flags = get_default_flags()

  # Configure React Native
  use_react_native!(
    path: config[:reactNativePath],
    # Hermes is enabled by default. Disable by setting to false if needed.
    hermes_enabled: flags[:hermes_enabled],
    fabric_enabled: flags[:fabric_enabled],
    # Configure Flipper
    flipper_configuration: flipper_config,
    # Set the absolute path to your application root
    app_path: "#{Pod::Config.instance.installation_root}/.."
  )

  # Target for unit tests
  target 'medistoris.catTests' do
    inherit! :complete
    # Pods for testing
  end

  # Post-install configuration for React Native
  post_install do |installer|
    # Run the post-install setup script
    react_native_post_install(
      installer,
      config[:reactNativePath],
      mac_catalyst_enabled: false
    )

     # Apply Xcode 12.5 and M1 chip workaround if needed
     __apply_Xcode_12_5_M1_post_install_workaround(installer)

     # Fix for BoringSSL-GRPC unsupported flags
     installer.pods_project.targets.each do |target|
       if target.name == 'BoringSSL-GRPC'
         target.source_build_phase.files.each do |file|
           if file.settings && file.settings['COMPILER_FLAGS']
             flags = file.settings['COMPILER_FLAGS'].split
             # Remove problematic flag
             flags.reject! { |flag| flag == '-GCC_WARN_INHIBIT_ALL_WARNINGS' }
             file.settings['COMPILER_FLAGS'] = flags.join(' ')
           end
         end
       end
     end
   end
 end